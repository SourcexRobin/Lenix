; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.42 

	TITLE	E:\SourcexStudio\Lenix\Lenix\src\lenix.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BD@DHJOKDCB@Lenix?5initial?5OK?$CB?6?$AA@ ; `string'
PUBLIC	_Lenix_initial
EXTRN	__printk:PROC
EXTRN	_Shell_initial:PROC
EXTRN	_Dev_initial:PROC
EXTRN	_Tty_initial:PROC
EXTRN	_Msg_initial:PROC
EXTRN	_Mutex_initial:PROC
EXTRN	_Clk_initial:PROC
EXTRN	_Proc_initial:PROC
EXTRN	_Machine_initial:PROC
EXTRN	_Cpu_initial:PROC
EXTRN	_Con_cls:PROC
EXTRN	_critical_nest:BYTE
;	COMDAT ??_C@_0BD@DHJOKDCB@Lenix?5initial?5OK?$CB?6?$AA@
; File e:\sourcexstudio\lenix\lenix\src\lenix.c
CONST	SEGMENT
??_C@_0BD@DHJOKDCB@Lenix?5initial?5OK?$CB?6?$AA@ DB 'Lenix initial OK!', 0aH
	DB	00H						; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT _Lenix_initial
_TEXT	SEGMENT
_Lenix_initial PROC					; COMDAT

; 30   :     Disable_interrupt();

  00000	fa		 cli

; 31   :     ++critical_nest;

  00001	80 05 00 00 00
	00 01		 add	 BYTE PTR _critical_nest, 1

; 32   :     
; 33   :     Con_cls();

  00008	e8 00 00 00 00	 call	 _Con_cls

; 34   : 
; 35   :     Cpu_initial();

  0000d	e8 00 00 00 00	 call	 _Cpu_initial

; 36   : 
; 37   :     //Mmu_initial();
; 38   : 
; 39   :     Machine_initial();

  00012	e8 00 00 00 00	 call	 _Machine_initial

; 40   : 
; 41   :     Proc_initial();

  00017	e8 00 00 00 00	 call	 _Proc_initial

; 42   : 
; 43   :     Clk_initial();

  0001c	e8 00 00 00 00	 call	 _Clk_initial

; 44   : 
; 45   : #ifdef _CFG_MUTEX_ENABLE_
; 46   :     Mutex_initial();

  00021	e8 00 00 00 00	 call	 _Mutex_initial

; 47   : #endif /*   _CFG_MUTEX_ENABLE_  */
; 48   : 
; 49   : #ifdef _CFG_MESSAGE_ENABLE_
; 50   :     Msg_initial();

  00026	e8 00 00 00 00	 call	 _Msg_initial

; 51   : #endif  /*  _CFG_MESSAGE_ENABLE_*/
; 52   : 
; 53   : #ifdef _CFG_TTY_ENABLE_
; 54   :     Tty_initial();

  0002b	e8 00 00 00 00	 call	 _Tty_initial

; 55   : #endif  /*  _CFG_TTY_ENABLE_    */
; 56   : 
; 57   : #ifdef _CFG_DEVICE_ENABLE_
; 58   :     Dev_initial();

  00030	e8 00 00 00 00	 call	 _Dev_initial

; 59   : #endif  /*  _CFG_DEVICE_ENABLE_ */
; 60   : 
; 61   : #ifdef _CFG_SHELL_ENABLE_
; 62   :     Shell_initial();

  00035	e8 00 00 00 00	 call	 _Shell_initial

; 63   : #endif  /*  _CFG_SHELL_ENABLE_  */
; 64   :     _printk("Lenix initial OK!\n");

  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@DHJOKDCB@Lenix?5initial?5OK?$CB?6?$AA@
  0003f	e8 00 00 00 00	 call	 __printk
  00044	59		 pop	 ecx

; 65   : }

  00045	c3		 ret	 0
_Lenix_initial ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BA@DAEPFAII@Lenix?5start?4?4?4?6?$AA@	; `string'
PUBLIC	??_C@_0O@GNOLGLLG@assert?5failed?$AA@		; `string'
PUBLIC	??_C@_0CA@NFBECFLL@assert?3?5?$CFs?5?6file?3?5?$CFs?6line?5?3?5?$CFd?6?$AA@ ; `string'
PUBLIC	??_C@_0BD@LBGLLBEA@critical_nest?5?$DN?$DN?50?$AA@ ; `string'
PUBLIC	??_C@_0M@PFJIPKOK@src?2lenix?4c?$AA@		; `string'
PUBLIC	_Lenix_start
EXTRN	_proc_need_sched:DWORD
EXTRN	_Lenix_start_hook:PROC
EXTRN	_Sys_halt:PROC
EXTRN	__printf:PROC
;	COMDAT ??_C@_0BA@DAEPFAII@Lenix?5start?4?4?4?6?$AA@
CONST	SEGMENT
??_C@_0BA@DAEPFAII@Lenix?5start?4?4?4?6?$AA@ DB 'Lenix start...', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GNOLGLLG@assert?5failed?$AA@
CONST	SEGMENT
??_C@_0O@GNOLGLLG@assert?5failed?$AA@ DB 'assert failed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@NFBECFLL@assert?3?5?$CFs?5?6file?3?5?$CFs?6line?5?3?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0CA@NFBECFLL@assert?3?5?$CFs?5?6file?3?5?$CFs?6line?5?3?5?$CFd?6?$AA@ DB 'a'
	DB	'ssert: %s ', 0aH, 'file: %s', 0aH, 'line : %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LBGLLBEA@critical_nest?5?$DN?$DN?50?$AA@
CONST	SEGMENT
??_C@_0BD@LBGLLBEA@critical_nest?5?$DN?$DN?50?$AA@ DB 'critical_nest == 0'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PFJIPKOK@src?2lenix?4c?$AA@
CONST	SEGMENT
??_C@_0M@PFJIPKOK@src?2lenix?4c?$AA@ DB 'src\lenix.c', 00H ; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT _Lenix_start
_TEXT	SEGMENT
_Lenix_start PROC					; COMDAT

; 70   :     --critical_nest;

  00000	80 05 00 00 00
	00 ff		 add	 BYTE PTR _critical_nest, 255 ; 000000ffH

; 71   :     ASSERT(critical_nest == 0);

  00007	74 23		 je	 SHORT $LN9@Lenix_star
  00009	6a 47		 push	 71			; 00000047H
  0000b	68 00 00 00 00	 push	 OFFSET ??_C@_0M@PFJIPKOK@src?2lenix?4c?$AA@
  00010	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@LBGLLBEA@critical_nest?5?$DN?$DN?50?$AA@
  00015	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@NFBECFLL@assert?3?5?$CFs?5?6file?3?5?$CFs?6line?5?3?5?$CFd?6?$AA@
  0001a	e8 00 00 00 00	 call	 __printf
  0001f	68 00 00 00 00	 push	 OFFSET ??_C@_0O@GNOLGLLG@assert?5failed?$AA@
  00024	e8 00 00 00 00	 call	 _Sys_halt
  00029	83 c4 14	 add	 esp, 20			; 00000014H
$LN9@Lenix_star:

; 72   :     
; 73   :     Lenix_start_hook();

  0002c	e8 00 00 00 00	 call	 _Lenix_start_hook

; 74   : 
; 75   :     _printk("Lenix start...\n");

  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@DAEPFAII@Lenix?5start?4?4?4?6?$AA@
  00036	e8 00 00 00 00	 call	 __printk
  0003b	83 c4 04	 add	 esp, 4

; 76   : 
; 77   :     Enable_interrupt();

  0003e	fb		 sti

; 78   : 
; 79   :     PROC_NEED_SCHED();

  0003f	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _proc_need_sched, 1

; 80   : }

  00049	c3		 ret	 0
_Lenix_start ENDP
_TEXT	ENDS
END
